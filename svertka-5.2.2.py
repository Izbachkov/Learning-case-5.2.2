# Курс "Программирование глубоких нейронных сетей на Python"
# Платформа "Открытое образование"
# Учебное задание № 1 раздела № 5 - Свертка плоская

import numpy as np

# Для каждого учащегося пример свой (размерность и составляющие вектора разные)

# Вектор
vector = [12, -18, -25, -5, -10, 20, 13, 8, 6, 12, -17, -1, -16, 25]

#Ядро свертки
kernel = [-0.9, 0.5, -2.0]

# Точность округления
acc = 1

def my_fun (x):
  """ На вход номер ячейки, на выход - значение свертки"""
  row = vector[x-1] * kernel[0] + vector[x] * kernel[1] + vector [x+1] * kernel[2]
  return round(row, acc)

# Итоговый массив. Пока из нулей
your_array = np.zeros(len(vector)-2)

for i in range(0, len(vector)-2):
  your_array[i] = my_fun (i+1)

print("Итоговый вектор: ")
print(your_array.tolist());

# Следующая информация для тестирования в моём примере

print ('\nИсходный элемент [{}] = {}'.format(5, vector[5]))
print ('Итоговый элемент [{}] = {}'.format(4,your_array[4]))

test = (-0.9*-10) + (0.5*20) + (-2.0*13)
test = round(test, acc)
print ('Hасчетное значение: ' + str(test))

#Итоговый результат (мой):
[30.2, 13.7, 40.0, -40.5, -7.0, -27.5, -19.7, -28.2, 34.6, -17.3, 46.8, -57.1]
